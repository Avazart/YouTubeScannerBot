version: "2.2"
services:
    app:
        container_name: youtube_scanner_app
        image: youtube_scanner_app
        command: python3 -m app
        volumes:
            - ${APP_DATA}/logs:${LOG_DIR}
        environment:
            MODE: $MODE
            WITHOUT_SENDING: $WITHOUT_SENDING
            PARSE_TAGS: $PARSE_TAGS
            LOG_DIR: $LOG_DIR
            PGUSER: $PGUSER
            PGPASSWORD: $PGPASSWORD
            PGDATABASE: $PGDATABASE
            PGHOST: $PGHOST
            PGPORT: $PGPORT
            BOT_TOKEN: $BOT_TOKEN
            BOT_ADMIN_IDS: $BOT_ADMIN_IDS
            CRON_SCHEDULE: $CRON_SCHEDULE
            SEND_DELAY: $SEND_DELAY
            REDIS_URL: $REDIS_URL
            REDIS_QUEUE: $REDIS_QUEUE
            TZ: $TZ
        depends_on:
            database:
                condition: service_healthy
            redis:
                condition: service_started

    redis:
        container_name: redis
        image: redis
        command: redis-server --save "" --appendonly no

    database:
        container_name: postgres
        image: postgres:14.1-alpine
        volumes:
            - ${APP_DATA}/init_db:/docker-entrypoint-initdb.d/
            - ${APP_DATA}/database_data:/var/lib/postgresql/data
        environment:
            PGUSER: $PGUSER
            PGPASSWORD: $PGPASSWORD
            POSTGRES_PASSWORD: $PGPASSWORD
            PGDATABASE: $PGDATABASE
            PGHOST: $PGHOST
            PGPORT: $PGPORT
        healthcheck:
              test: ["CMD-SHELL", "pg_isready"]
              interval: 5s
              timeout: 5s
              retries: 5